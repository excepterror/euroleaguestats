#:kivy 1.0

#:include Kv/home.kv
#:include Kv/menu.kv
#:include Kv/changelog.kv
#:include Kv/standings.kv
#:include Kv/teams.kv
#:include Kv/roster.kv
#:include Kv/stats.kv
#:include Kv/wait.kv

#:import clock kivy.clock.Clock

<ELSScreenManager>:
    home_screen: home_screen
    standings_screen: standings_screen
    teams_screen: teams_screen
    roster_screen: roster_screen
    stats_screen: stats_screen
    Home:
        id: home_screen
        on_rosters_reg: root.teams_screen.grid_teams.rosters = self.rosters_reg
        on_standings: root.standings_screen.standings = self.standings; root.standings_screen.recycle_view.current_standings = root.standings_screen.standings
    Menu:
        on_enter: root.check_in_names(self.name)
    Changelog:
        on_enter: root.check_in_names(self.name)
    Standings:
        id: standings_screen
        on_enter: root.check_in_names(self.name)
    Teams:
        id: teams_screen
        on_enter: root.check_in_names(self.name)
        on_idx: root.roster_screen.idx += 1
    Roster:
        id: roster_screen
        on_enter: root.check_in_names(self.name)
        on_idx: self.roster = root.teams_screen.grid_teams.selected_roster; clock.schedule_once(self.extract_trees, .1)
        on_selection_flag: root.stats_screen.player_tree_data = self.assert_tree_return; root.stats_screen.player_name = self.assert_tree_return[6]
        on_leave: if len(root.screens_visited) == 2: self.grid.clear_widgets()
    Wait:
    Stats:
        id: stats_screen
        on_enter: root.check_in_names(self.name)
        on_leave: self.player_tree_data=[]; self.restore_recycle_view()